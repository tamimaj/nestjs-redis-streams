import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { Transport, MicroserviceOptions } from '@nestjs/microservices';
import { AppModule } from './app.module';
import listenForMessage from './users/redis/redis.stream-listner';
import { USERS_PACKAGE_NAME } from 'sona-proto';
import { RedisServer } from './redis-streams-strategy/redis.server';

const protoPathTest = require.resolve('sona-proto/out/proto/users.proto');

const logger = new Logger('Users Microservice');

const PORT = process.env.PORT || 50055;

const microserviceOptions: MicroserviceOptions = {
  transport: Transport.GRPC,
  options: {
    package: USERS_PACKAGE_NAME, // auto generated by ts-proto nestJS opts.
    protoPath: protoPathTest,
    url: `0.0.0.0:${PORT}`,
  },
};

async function bootstrap() {
  const app = await NestFactory.createMicroservice(AppModule, {
    strategy: new RedisServer({
      connection: {
        url: '0.0.0.0:6379',
      },
      streams: {
        useXread: false,
        block: 5000,
        consumer: 'users-1',
        consumerGroup: 'tamim',
      },
    }),
  });

  await app.listen();
  logger.log(`üëçüëç Users microservice is listening on port ${PORT}`);

  // TEST REDIS STREAM CONSUMING
  // listenForMessage();
}
bootstrap();
