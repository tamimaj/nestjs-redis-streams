import { Logger } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { Transport, MicroserviceOptions } from '@nestjs/microservices';
import { AppModule } from './app.module';
import listenForMessage from './users/redis/redis.stream-listner';
import { USERS_PACKAGE_NAME } from 'sona-proto';

const protoPathTest = require.resolve('sona-proto/out/proto/users.proto');

const logger = new Logger('Users Microservice');

const PORT = process.env.PORT || 50055;

const microserviceOptions: MicroserviceOptions = {
  transport: Transport.GRPC,
  options: {
    package: USERS_PACKAGE_NAME, // auto generated by ts-proto nestJS opts.
    protoPath: protoPathTest,
    url: `0.0.0.0:${PORT}`,
  },
};

async function bootstrap() {
  const app = await NestFactory.createMicroservice(
    AppModule,
    microserviceOptions,
  );

  await app.listen();
  logger.log(`üëçüëç Users microservice is listening on port ${PORT}`);

  // TEST REDIS STREAM CONSUMING
  listenForMessage();
}
bootstrap();
