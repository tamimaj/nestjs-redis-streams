name: Coverage Test

on:
  push:
    branches: [main, dev, tests]
  pull_request:
    branches: [main, dev, tests]
    
jobs:
  coverage:
    runs-on: ${{ matrix.os }}
    # services:
    #   redis:
    #     image: redis
    #     ports:
    #       - 6379:6379
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        node: ['16', '18']

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run tests and collect coverage
        run: npm test -- --coverage

      # - name: Upload coverage to Codecov
      #   uses:  codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} 
      #     fail_ci_if_error: true # optional (default = false)
      #     verbose: true # optional (default = false)
